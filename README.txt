sample
     1.学习相关项目或示例代码。
     2.注意分项目、分模块，
     3.注意代码管理，每次的提交记录和拉出的分支
     4.readme文件，项目结构，涉及知识点

lang模块：
     1.kotlin和java学习示例代码。  
     2.工作积累示例代码
     3.源码、算法学习

summary项目
     1.项目开发积累代码库，来源于学习，工作，开源、总结的项目。
     2.必须是经过测试，健壮的代码

dev项目
      1.工作开发积累
      2.包含第三方sdk的接入，动效等待

demo项目
      1.代码练习
      2.反复练习官网示例

===============================================================
集成官网代码示例时
备注：
1、对应的分支，最后提交时间，是否在维护
2、对于codelab拉出start和end分支
3、示例：功能解析，知识点解析，解决问题点，设计思路
4、自己的修改点


问题
====================================
1、依赖版本不统一原因：引用库使用不同的依赖导致。通过 gradle-> 分析依赖功能查看依赖关系


总结
===========================================================
总结1
数据的生命周期，分层，作用域。
例如：全局配置数据，限定功能数据。
界面（Activity，Fragment，View，Compose）的生命周期，返回堆栈
实战：1、项目结构是一个Activity+多Fragment？还是多个Activity+多个Fragment
        2、数据的管理。

总结2
模块化考虑的点

