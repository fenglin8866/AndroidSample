java基础知识
1、一个集合放入另一个集合，放入的是集合引用还是元素？
 验证结论：是元素

Dagger实现总结
设计知识点
1、面向接口编程。接口定义，变量类型，方法参数
2、单例，建造者模式，工厂模式
3、泛型，内部类，修饰符（final，static）
4、编码规范：命名，设计思路

================================
核心结构
===========
注入容器
注入器
依赖工厂
================================================
场景：


===================
注意点：
 A @Module may not contain both non-static and abstract binding methods
 @module不能同时包含非静态和抽象绑定方法
 解决：
 1、所有@Bind定义为一个@Module的接口类
 2、将@Bind转换为@Provider方法

 ============================================
 工厂方法
 单例模式：静态内部类，静态方法


//============================================================
xxxComponent接口类：定义依赖关系
1、添加相关model类型
2、定义传入被依赖类型的方法（推荐）
3、定义返回依赖类型的方法

=====================================
设计思路非常巧妙：复用，职责单一，面向接口编程，功能交互
Factory：提供依赖对象。工厂模式，提供对象，封装对象的构建。统一构造方法，Model类，对象的封装性
    1、所有的依赖对象必须从Factory获取
    2、层层依赖的处理，添加Provider对象，封装自身，不关心依赖项的构建，依赖的构建相关独立。需要依赖使用Provider获取。

MembersInjector:定义依赖关系，使用接口变量，减少不必要的逻辑，保持通用性，简洁性。
Component：注入容器。组装依赖对象与被依赖对象。对外提供组装调用



依赖的对象类型。
    用构造方法构建，
    不能构造方法构建：

    构建是需要传递参数










