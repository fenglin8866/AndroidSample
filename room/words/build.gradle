plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.ksp)
}

android {
    namespace 'com.example.android.roomwordssample'
    compileSdk 34

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation project(':core:basic')

    implementation libs.androidx.core.ktx
    implementation libs.androidx.activity.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core


    // Room components
    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.ktx
    annotationProcessor libs.androidx.room.compiler
    // To use Kotlin Symbol Processing (KSP)
    ksp libs.androidx.room.compiler


    // Lifecycles only (without ViewModel or LiveData)
    implementation libs.androidx.lifecycle.runtime.ktx
    // Lifecycle utilities for Compose
    implementation libs.androidx.lifecycle.runtime.compose
    // ViewModel
    implementation libs.androidx.lifecycle.viewmodel.ktx
    // ViewModel utilities for Compose
    implementation libs.androidx.lifecycle.viewmodel.compose
    // LiveData
    implementation libs.androidx.lifecycle.livedata.ktx
    // Saved state module for ViewModel
    implementation libs.androidx.lifecycle.viewmodel.savedstate
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation libs.androidx.lifecycle.common.java8
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation libs.androidx.lifecycle.service
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation libs.androidx.lifecycle.process
    // optional - ReactiveStreams support for LiveData
    implementation libs.androidx.lifecycle.reactivestreams.ktx
    // optional - Test helpers for Lifecycle runtime
    testImplementation libs.androidx.lifecycle.runtime.testing
    // optional - Test helpers for LiveData
    implementation libs.androidx.arch.core.common
    implementation libs.androidx.arch.core.runtime
    implementation libs.androidx.arch.core.testing
    // Java language implementation
    implementation libs.savedstate
    // Kotlin
    implementation libs.savedstate.ktx


}